clusters$easting <- st_coordinates(clusters)[, 'X']
clusters$northing <- st_coordinates(clusters)[, 'Y']
clusters <- clusters[, c(1, 3, 4, 2)]
# assign ID of cluster to each chp plant
setwd('D:/Documents/FABGGR-ADVENT/Output/Energy demand')
plants <- read.csv('new_CHP_plants_max_9cell_heat.csv')
plants$cluster_id <- NA
plants[plants$onekmid %in% chp$onekmid, 'cluster_id'] <- chp$cluster_id
clusters
i <- 1
df <- chp[chp$cluster_id == i, ]
df
chp <- chp %>%
as.data.frame %>%
sf::st_as_sf(coords = c(2,3))
chp <- st_set_crs(chp, 27700)
head(chp)
df <- chp[chp$cluster_id == i, ]
df
head(clusters)
clusters[clusters$cluster_id == chp[chp$onekmid == i,'cluster_id'],]
i <- chp$onekmid[1]
chp[chp$onekmid == i,'cluster_id']
clusters[clusters$cluster_id == chp[chp$onekmid == i,'cluster_id'],]
clusters[clusters$cluster_id == chp[chp$onekmid == i,'cluster_id', drop=TRUE],]
rdist(st_coordinates(chp[chp$onekmid == i,]), st_coordinates(centre))
centre <- clusters[clusters$cluster_id == chp[chp$onekmid == i,'cluster_id', drop=TRUE],]
rdist(st_coordinates(chp[chp$onekmid == i,]), st_coordinates(centre))
rdist(st_coordinates(chp[chp$onekmid == i,]), st_coordinates(centre)) / 1e3
chp$dist_to_centre <- NA
for (i in chp$onekmid){
centre <- clusters[clusters$cluster_id == chp[chp$onekmid == i,'cluster_id', drop=TRUE],]
chp[chp$onekmid == i, 'dist_to_centre'] <- rdist(st_coordinates(chp[chp$onekmid == i,]), st_coordinates(centre)) / 1e3
}
head(chp)
head(plants)
rm(list=ls())
library(sf)
library(fields)
## (1) LOAD DATA
## =============
## 1.1. CHP locations
## ------------------
setwd('D:/Documents/FABGGR-ADVENT/Output/Energy demand')
chp <- read.csv('new_CHP_plants_max_9cell_heat.csv')
chp <- chp[chp$chp_logical == TRUE, ]
## 1.2. HUB locations
## ------------------
setwd('D:/Documents/FABGGR-ADVENT/Data/CCS transport costs')
hubs <- as.matrix(read.csv('hub_location.csv')[, c(3, 2)])
colnames(hubs) <- c('X', 'Y')
hub_names <- read.csv('hub_location.csv')[, 1]
hubs <- hubs %>%
as.data.frame %>%
sf::st_as_sf(coords = c(1,2))
hubs <- st_set_crs(hubs, 4326)
hubs <- st_transform(hubs, crs = 27700)
hubs$location <- hub_names
hubs$easting <- st_coordinates(hubs)[, 'X']
hubs$northing <- st_coordinates(hubs)[, 'Y']
hubs <- hubs[, c(2:4, 1)]
## 1.2. Functions to identify neighbours and clusters of cells
## -----------------------------------------------------------
find_neighbour <- function(i, df, ncells){
neigh_coords <- matrix(NA, nrow = length(i) * ncells, ncol = 2)
for (j in 1:length(i)){
x <- df$easting[df$onekmid == i[j]]
y <- df$northing[df$onekmid == i[j]]
if (ncells == 9){
x_west <- x - 1000
x_east <- x + 1000
y_south <- y - 1000
y_north <- y + 1000
} else if (ncells == 25){
x_west <- c(x - 1000, x - 2000)
x_east <- c(x + 1000, x + 2000)
y_south <- c(y - 1000, y - 2000)
y_north <- c(y + 1000, y + 2000)
} else if (ncells == 121){
x_west <- c(x - 1000, x - 2000, x - 3000, x - 4000, x - 5000)
x_east <- c(x + 1000, x + 2000, x + 3000, x + 4000, x + 5000)
y_south <- c(y - 1000, y - 2000, y - 3000, y - 4000, y - 5000)
y_north <- c(y + 1000, y + 2000, y + 3000, y + 4000, y + 5000)
} else if (ncells == 225){
x_west <- c(x - 1000, x - 2000, x - 3000, x - 4000, x - 5000, x - 6000, x - 7000)
x_east <- c(x + 1000, x + 2000, x + 3000, x + 4000, x + 5000, x + 6000, x + 7000)
y_south <- c(y - 1000, y - 2000, y - 3000, y - 4000, y - 5000, y - 6000, y - 7000)
y_north <- c(y + 1000, y + 2000, y + 3000, y + 4000, y + 5000, y + 6000, y + 7000)
}
ind <- 1:ncells + ncells * (j-1)
neigh_coords[ind, ] <- as.matrix(expand.grid(c(x_west, x, x_east), c(y_south, y, y_north)))
}
neigh_coords <- as.data.frame(neigh_coords)
colnames(neigh_coords) <- c('easting', 'northing')
neighs <- df[(df$easting %in% neigh_coords$easting & df$northing %in% neigh_coords$northing), ]
neighs <- neighs[!(neighs$onekmid %in% i), 'onekmid']
return(neighs)
}
# Find clusters of neighbours
find_cluster <- function(i, df, ncells){
cluster_cells <- i
neighs <- find_neighbour(i, df, ncells)
while (!all(neighs %in% cluster_cells)){
cluster_cells <- c(cluster_cells, neighs[!(neighs %in% cluster_cells)])
neighs <- find_neighbour(neighs, df, ncells)
}
return(cluster_cells)
}
## (2) IDENTIFY CLUSTERS OF CHP PLANTS AND THE COORDINATES OF THE CLUSTER
##     CENTROID
## ======================================================================
chp$cluster_id <- NA
cluster_id <- vector()
cluster_easting <- vector()
cluster_northing <- vector()
cluster_num <- 1
cluster_cells <- vector()
for (i in chp$onekmid){
# is the cell in a cluster already processed?
if (i %in% cluster_cells){
next
} else {
#find cells in cluster
cluster_idx <- find_cluster(i, chp, ncells=225)
# Assign cluster ID
chp$cluster_id[chp$onekmid %in% cluster_idx] <- cluster_num
cluster_id <- c(cluster_id, cluster_num)
# Assign coordinates
easting  <- mean(chp$easting[chp$onekmid %in% cluster_idx])
northing <- mean(chp$northing[chp$onekmid %in% cluster_idx])
cluster_easting <- c(cluster_easting, easting)
cluster_northing <- c(cluster_northing, northing)
# increment counters
cluster_num <- cluster_num + 1
cluster_cells <- c(cluster_cells, cluster_idx)
}
}
clusters <- as.matrix(data.frame('cluster_id' = cluster_id,
'easting' = cluster_easting,
'northing' = cluster_northing))
# convert into spatial file
clusters <- clusters %>%
as.data.frame %>%
sf::st_as_sf(coords = c(2,3))
clusters <- st_set_crs(clusters, 27700)
clusters$easting <- st_coordinates(clusters)[, 'X']
clusters$northing <- st_coordinates(clusters)[, 'Y']
clusters <- clusters[, c(1, 3, 4, 2)]
# assign ID of cluster to each chp plant
setwd('D:/Documents/FABGGR-ADVENT/Output/Energy demand')
plants <- read.csv('new_CHP_plants_max_9cell_heat.csv')
plants$cluster_id <- NA
plants[plants$onekmid %in% chp$onekmid, 'cluster_id'] <- chp$cluster_id
## (3) CALCULATE DISTANCE FROM EACH CHP TO ITS CLUSTER CENTROID
## ============================================================
chp <- chp %>%
as.data.frame %>%
sf::st_as_sf(coords = c(2,3))
chp <- st_set_crs(chp, 27700)
chp$dist_to_centroid <- NA
for (i in chp$onekmid){
centroid <- clusters[clusters$cluster_id == chp[chp$onekmid == i,'cluster_id', drop=TRUE],]
chp[chp$onekmid == i, 'dist_to_centroid'] <- rdist(st_coordinates(chp[chp$onekmid == i,]), st_coordinates(centre)) / 1e3
}
plants$dist_to_centroid <- NA
plants[plants$onekmid %in% chp$onekmid, 'dist_to_centroid'] <- chp$dist_to_centroid
chp$dist_to_centroid <- NA
for (i in chp$onekmid){
centroid <- clusters[clusters$cluster_id == chp[chp$onekmid == i,'cluster_id', drop=TRUE],]
chp[chp$onekmid == i, 'dist_to_centroid'] <- rdist(st_coordinates(chp[chp$onekmid == i,]), st_coordinates(centroid)) / 1e3
}
plants$dist_to_centroid <- NA
plants[plants$onekmid %in% chp$onekmid, 'dist_to_centroid'] <- chp$dist_to_centroid
head(plants)
plants[plants$chp_logical == TRUE,]
dist <- rdist(st_coordinates(clusters), st_coordinates(hubs)) / 1e3
colnames(dist) <- hubs$location
dist <- cbind(1:nrow(dist), clusters$easting, clusters$northing, dist)
colnames(dist)[1:3] <- c('cluster_id', 'easting', 'northing')
clusters <- as.data.frame(dist)
clusters
setwd('D:/Documents/FABGGR-ADVENT/Output/CCS network')
write.csv(clusters, 'chp_distance_to_hub.csv')
## (5) SAVE ON DISK
## ================
setwd('D:/Documents/FABGGR-ADVENT/Output/CCS network')
rm(list=ls())
library(sf)
library(fields)
## (1) LOAD DATA
## =============
## 1.1. CHP locations
## ------------------
setwd('D:/Documents/FABGGR-ADVENT/Output/Energy demand')
chp <- read.csv('new_CHP_plants_max_9cell_heat.csv')
chp <- chp[chp$chp_logical == TRUE, ]
## 1.2. HUB locations
## ------------------
setwd('D:/Documents/FABGGR-ADVENT/Data/CCS transport costs')
hubs <- as.matrix(read.csv('hub_location.csv')[, c(3, 2)])
colnames(hubs) <- c('X', 'Y')
hub_names <- read.csv('hub_location.csv')[, 1]
hubs <- hubs %>%
as.data.frame %>%
sf::st_as_sf(coords = c(1,2))
hubs <- st_set_crs(hubs, 4326)
hubs <- st_transform(hubs, crs = 27700)
hubs$location <- hub_names
hubs$easting <- st_coordinates(hubs)[, 'X']
hubs$northing <- st_coordinates(hubs)[, 'Y']
hubs <- hubs[, c(2:4, 1)]
## 1.2. Functions to identify neighbours and clusters of cells
## -----------------------------------------------------------
find_neighbour <- function(i, df, ncells){
neigh_coords <- matrix(NA, nrow = length(i) * ncells, ncol = 2)
for (j in 1:length(i)){
x <- df$easting[df$onekmid == i[j]]
y <- df$northing[df$onekmid == i[j]]
if (ncells == 9){
x_west <- x - 1000
x_east <- x + 1000
y_south <- y - 1000
y_north <- y + 1000
} else if (ncells == 25){
x_west <- c(x - 1000, x - 2000)
x_east <- c(x + 1000, x + 2000)
y_south <- c(y - 1000, y - 2000)
y_north <- c(y + 1000, y + 2000)
} else if (ncells == 121){
x_west <- c(x - 1000, x - 2000, x - 3000, x - 4000, x - 5000)
x_east <- c(x + 1000, x + 2000, x + 3000, x + 4000, x + 5000)
y_south <- c(y - 1000, y - 2000, y - 3000, y - 4000, y - 5000)
y_north <- c(y + 1000, y + 2000, y + 3000, y + 4000, y + 5000)
} else if (ncells == 225){
x_west <- c(x - 1000, x - 2000, x - 3000, x - 4000, x - 5000, x - 6000, x - 7000)
x_east <- c(x + 1000, x + 2000, x + 3000, x + 4000, x + 5000, x + 6000, x + 7000)
y_south <- c(y - 1000, y - 2000, y - 3000, y - 4000, y - 5000, y - 6000, y - 7000)
y_north <- c(y + 1000, y + 2000, y + 3000, y + 4000, y + 5000, y + 6000, y + 7000)
}
ind <- 1:ncells + ncells * (j-1)
neigh_coords[ind, ] <- as.matrix(expand.grid(c(x_west, x, x_east), c(y_south, y, y_north)))
}
neigh_coords <- as.data.frame(neigh_coords)
colnames(neigh_coords) <- c('easting', 'northing')
neighs <- df[(df$easting %in% neigh_coords$easting & df$northing %in% neigh_coords$northing), ]
neighs <- neighs[!(neighs$onekmid %in% i), 'onekmid']
return(neighs)
}
# Find clusters of neighbours
find_cluster <- function(i, df, ncells){
cluster_cells <- i
neighs <- find_neighbour(i, df, ncells)
while (!all(neighs %in% cluster_cells)){
cluster_cells <- c(cluster_cells, neighs[!(neighs %in% cluster_cells)])
neighs <- find_neighbour(neighs, df, ncells)
}
return(cluster_cells)
}
## (2) IDENTIFY CLUSTERS OF CHP PLANTS AND THE COORDINATES OF THE CLUSTER
##     CENTROID
## ======================================================================
chp$cluster_id <- NA
cluster_id <- vector()
cluster_easting <- vector()
cluster_northing <- vector()
cluster_num <- 1
cluster_cells <- vector()
for (i in chp$onekmid){
# is the cell in a cluster already processed?
if (i %in% cluster_cells){
next
} else {
#find cells in cluster
cluster_idx <- find_cluster(i, chp, ncells=225)
# Assign cluster ID
chp$cluster_id[chp$onekmid %in% cluster_idx] <- cluster_num
cluster_id <- c(cluster_id, cluster_num)
# Assign coordinates
easting  <- mean(chp$easting[chp$onekmid %in% cluster_idx])
northing <- mean(chp$northing[chp$onekmid %in% cluster_idx])
cluster_easting <- c(cluster_easting, easting)
cluster_northing <- c(cluster_northing, northing)
# increment counters
cluster_num <- cluster_num + 1
cluster_cells <- c(cluster_cells, cluster_idx)
}
}
clusters <- as.matrix(data.frame('cluster_id' = cluster_id,
'easting' = cluster_easting,
'northing' = cluster_northing))
# convert into spatial file
clusters <- clusters %>%
as.data.frame %>%
sf::st_as_sf(coords = c(2,3))
clusters <- st_set_crs(clusters, 27700)
clusters$easting <- st_coordinates(clusters)[, 'X']
clusters$northing <- st_coordinates(clusters)[, 'Y']
clusters <- clusters[, c(1, 3, 4, 2)]
# assign ID of cluster to each chp plant
setwd('D:/Documents/FABGGR-ADVENT/Output/Energy demand')
plants <- read.csv('new_CHP_plants_max_9cell_heat.csv')
plants$cluster_id <- NA
plants[plants$onekmid %in% chp$onekmid, 'cluster_id'] <- chp$cluster_id
## (3) CALCULATE DISTANCE FROM EACH CHP TO ITS CLUSTER CENTROID
## ============================================================
chp <- chp %>%
as.data.frame %>%
sf::st_as_sf(coords = c(2,3))
chp <- st_set_crs(chp, 27700)
chp$dist_to_centroid <- NA
for (i in chp$onekmid){
centroid <- clusters[clusters$cluster_id == chp[chp$onekmid == i,'cluster_id', drop=TRUE],]
chp[chp$onekmid == i, 'dist_to_centroid'] <- rdist(st_coordinates(chp[chp$onekmid == i,]), st_coordinates(centroid)) / 1e3
}
plants$dist_to_centroid <- NA
plants[plants$onekmid %in% chp$onekmid, 'dist_to_centroid'] <- chp$dist_to_centroid
## (4) CALCULATE THE DISTANCE FROM EACH CLUSTER TO EACH HUB
## ========================================================
dist <- rdist(st_coordinates(clusters), st_coordinates(hubs)) / 1e3
colnames(dist) <- hubs$location
dist <- cbind(1:nrow(dist), clusters$easting, clusters$northing, dist)
colnames(dist)[1:3] <- c('cluster_id', 'easting', 'northing')
clusters <- as.data.frame(dist)
## (5) SAVE ON DISK
## ================
setwd('D:/Documents/FABGGR-ADVENT/Output/CCS network')
## (5) SAVE ON DISK
## ================
setwd('D:/Documents/FABGGR-ADVENT/Output/CCS transport')
write.csv(clusters, 'chp_distance_to_hub.csv')
head(plants)
setwd('D:/Documents/FABGGR-ADVENT/Output/CCS transport')
write.csv(clusters, 'chp_distance_to_hub.csv', row.names = FALSE)
setwd('D:/Documents/FABGGR-ADVENT/Output/Energy demand')
write.csv(plants, 'new_CHP_plants_max_9cell_heat.csv', row.names = FALSE)
plants <- plants %>%
as.data.frame %>%
sf::st_as_sf(coords = c(2,3))
plants <- st_set_crs(plants, 27700)
library(mapview)
mapview(plants)
clusters <- clusters %>%
as.data.frame %>%
sf::st_as_sf(coords = c(2,3))
clusters <- st_set_crs(clusters, 27700)
mapview(clusters)
# library(mapview)
rm(list=ls())
library(sf)
library(fields)
## (1) LOAD DATA
## =============
## 1.1. CHP locations
## ------------------
setwd('D:/Documents/FABGGR-ADVENT/Output/Energy demand')
chp <- read.csv('new_CHP_plants_max_9cell_heat.csv')
chp <- chp[chp$chp_logical == TRUE, ]
## 1.2. HUB locations
## ------------------
setwd('D:/Documents/FABGGR-ADVENT/Data/CCS transport costs')
hubs <- as.matrix(read.csv('hub_location.csv')[, c(3, 2)])
colnames(hubs) <- c('X', 'Y')
hub_names <- read.csv('hub_location.csv')[, 1]
hubs <- hubs %>%
as.data.frame %>%
sf::st_as_sf(coords = c(1,2))
hubs <- st_set_crs(hubs, 4326)
hubs <- st_transform(hubs, crs = 27700)
hubs$location <- hub_names
hubs$easting <- st_coordinates(hubs)[, 'X']
hubs$northing <- st_coordinates(hubs)[, 'Y']
hubs <- hubs[, c(2:4, 1)]
## 1.2. Functions to identify neighbours and clusters of cells
## -----------------------------------------------------------
find_neighbour <- function(i, df, ncells){
neigh_coords <- matrix(NA, nrow = length(i) * ncells, ncol = 2)
for (j in 1:length(i)){
x <- df$easting[df$onekmid == i[j]]
y <- df$northing[df$onekmid == i[j]]
if (ncells == 9){
x_west <- x - 1000
x_east <- x + 1000
y_south <- y - 1000
y_north <- y + 1000
} else if (ncells == 25){
x_west <- c(x - 1000, x - 2000)
x_east <- c(x + 1000, x + 2000)
y_south <- c(y - 1000, y - 2000)
y_north <- c(y + 1000, y + 2000)
} else if (ncells == 121){
x_west <- c(x - 1000, x - 2000, x - 3000, x - 4000, x - 5000)
x_east <- c(x + 1000, x + 2000, x + 3000, x + 4000, x + 5000)
y_south <- c(y - 1000, y - 2000, y - 3000, y - 4000, y - 5000)
y_north <- c(y + 1000, y + 2000, y + 3000, y + 4000, y + 5000)
} else if (ncells == 225){
x_west <- c(x - 1000, x - 2000, x - 3000, x - 4000, x - 5000, x - 6000, x - 7000)
x_east <- c(x + 1000, x + 2000, x + 3000, x + 4000, x + 5000, x + 6000, x + 7000)
y_south <- c(y - 1000, y - 2000, y - 3000, y - 4000, y - 5000, y - 6000, y - 7000)
y_north <- c(y + 1000, y + 2000, y + 3000, y + 4000, y + 5000, y + 6000, y + 7000)
}
ind <- 1:ncells + ncells * (j-1)
neigh_coords[ind, ] <- as.matrix(expand.grid(c(x_west, x, x_east), c(y_south, y, y_north)))
}
neigh_coords <- as.data.frame(neigh_coords)
colnames(neigh_coords) <- c('easting', 'northing')
neighs <- df[(df$easting %in% neigh_coords$easting & df$northing %in% neigh_coords$northing), ]
neighs <- neighs[!(neighs$onekmid %in% i), 'onekmid']
return(neighs)
}
# Find clusters of neighbours
find_cluster <- function(i, df, ncells){
cluster_cells <- i
neighs <- find_neighbour(i, df, ncells)
while (!all(neighs %in% cluster_cells)){
cluster_cells <- c(cluster_cells, neighs[!(neighs %in% cluster_cells)])
neighs <- find_neighbour(neighs, df, ncells)
}
return(cluster_cells)
}
## (2) IDENTIFY CLUSTERS OF CHP PLANTS AND THE COORDINATES OF THE CLUSTER
##     CENTROID
## ======================================================================
chp$cluster_id <- NA
cluster_id <- vector()
cluster_easting <- vector()
cluster_northing <- vector()
cluster_num <- 1
cluster_cells <- vector()
for (i in chp$onekmid){
# is the cell in a cluster already processed?
if (i %in% cluster_cells){
next
} else {
#find cells in cluster
cluster_idx <- find_cluster(i, chp, ncells=225)
# Assign cluster ID
chp$cluster_id[chp$onekmid %in% cluster_idx] <- cluster_num
cluster_id <- c(cluster_id, cluster_num)
# Assign coordinates
easting  <- mean(chp$easting[chp$onekmid %in% cluster_idx])
northing <- mean(chp$northing[chp$onekmid %in% cluster_idx])
cluster_easting <- c(cluster_easting, easting)
cluster_northing <- c(cluster_northing, northing)
# increment counters
cluster_num <- cluster_num + 1
cluster_cells <- c(cluster_cells, cluster_idx)
}
}
clusters <- as.matrix(data.frame('cluster_id' = cluster_id,
'easting' = cluster_easting,
'northing' = cluster_northing))
# convert into spatial file
clusters <- clusters %>%
as.data.frame %>%
sf::st_as_sf(coords = c(2,3))
clusters <- st_set_crs(clusters, 27700)
clusters$easting <- st_coordinates(clusters)[, 'X']
clusters$northing <- st_coordinates(clusters)[, 'Y']
clusters <- clusters[, c(1, 3, 4, 2)]
# assign ID of cluster to each chp plant
setwd('D:/Documents/FABGGR-ADVENT/Output/Energy demand')
plants <- read.csv('new_CHP_plants_max_9cell_heat.csv')
plants$cluster_id <- NA
plants[plants$onekmid %in% chp$onekmid, 'cluster_id'] <- chp$cluster_id
## (3) CALCULATE DISTANCE FROM EACH CHP TO ITS CLUSTER CENTROID
## ============================================================
chp <- chp %>%
as.data.frame %>%
sf::st_as_sf(coords = c(2,3))
chp <- st_set_crs(chp, 27700)
chp$dist_to_centroid <- NA
for (i in chp$onekmid){
centroid <- clusters[clusters$cluster_id == chp[chp$onekmid == i,'cluster_id', drop=TRUE],]
chp[chp$onekmid == i, 'dist_to_centroid'] <- rdist(st_coordinates(chp[chp$onekmid == i,]), st_coordinates(centroid)) / 1e3
}
plants$dist_to_centroid <- NA
plants[plants$onekmid %in% chp$onekmid, 'dist_to_centroid'] <- chp$dist_to_centroid
## (4) CALCULATE THE DISTANCE FROM EACH CLUSTER TO EACH HUB
## ========================================================
dist <- rdist(st_coordinates(clusters), st_coordinates(hubs)) / 1e3
colnames(dist) <- hubs$location
dist <- cbind(1:nrow(dist), clusters$easting, clusters$northing, dist)
colnames(dist)[1:3] <- c('cluster_id', 'easting', 'northing')
clusters <- as.data.frame(dist)
## (5) SAVE ON DISK
## ================
setwd('D:/Documents/FABGGR-ADVENT/Output/CCS transport')
write.csv(clusters, 'chp_distance_to_hub.csv', row.names = FALSE)
setwd('D:/Documents/FABGGR-ADVENT/Output/Energy demand')
write.csv(plants, 'new_CHP_plants_max_9cell_heat.csv', row.names = FALSE)
# ## maps
# library(mapview)
# plants <- plants %>%
#   as.data.frame %>%
#   sf::st_as_sf(coords = c(2,3))
# plants <- st_set_crs(plants, 27700)
# mapview(plants)
#
# clusters <- clusters %>%
#   as.data.frame %>%
#   sf::st_as_sf(coords = c(2,3))
# clusters <- st_set_crs(clusters, 27700)
# mapview(clusters)
setwd('D:/Documents/GitHub/biodiversity-net-gain/Data/Urban Sprawl - F.Eigenbrod/')
city_spread <- read.csv('./urban_sprawl_2km_farm.csv')
city_spread <- merge(seer_2km, city_spread, by = 'new2kid')
head(city_spread)
sum(unique(city_spread$area_new_builds))
len(unique(city_spread$area_new_builds))
length(unique(city_spread$area_new_builds))
length(city_spread$area_new_builds > 0)
length(city_spread[city_spread$area_new_builds > 0, 'area_new_builds'])
